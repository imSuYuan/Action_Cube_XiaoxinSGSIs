name: Action_Cube_XiaoxinSGSIs

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'ROM_URL'
        required: true
        default: 'https://hugeota.d.miui.com/21.9.28/miui_DAVINCI_21.9.28_48aa8cdf69_11.0.zip'
      ZIP_NAME:
        description: 'ZIP_NAME'
        required: true
        default: 'miui_DAVINCI_21.9.28_48aa8cdf69_11.0.zip'
      OS_TYPE:
        description: 'OS_TYPE'
        required: true
        default: 'miui'
      SGSI_TYPE:
        description: 'SGSI_TYPE(AB, A, or BOTH)'
        required: true
        default: 'AB'
      REPACK_NAME:
        description: 'REPACK_NAME'
        required: true
        default: 'MIUI＿SGSI.zip'





jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Get the source code of this repositorie...
        uses: actions/checkout@main

      - name: Get variable configuration...
        run: |
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV
      - name: Clean up the environment‌‌...
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: Configuration Environment‌‌...
        run: |
          sudo apt-get install -y git wget git zip unzip curl axel
      - name: Get the SGSI tool‌‌...
        run: |
          git clone --recurse-submodules https://github.com/xiaoxindada/SGSI-build-tool.git -b 11 $GITHUB_WORKSPACE/Tool-SGSI-build
      - name: Replace custom condensed content...
        run: |
          sudo rm -rf $GITHUB_WORKSPACE/Tool-SGSI-build/apps_clean
          sudo cp -r apps_clean $GITHUB_WORKSPACE/Tool-SGSI-build/apps_clean
          sudo chmod 777 -R $GITHUB_WORKSPACE/Tool-SGSI-build
      - name: Download ROM‌‌...
        run: |
          cd $GITHUB_WORKSPACE/Tool-SGSI-build
          mkdir ./tmp
          wget -U "Mozilla/5.0" ${{ github.event.inputs.ROM_URL }} -O "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/${{ github.event.inputs.ZIP_NAME }}"
          echo "zip_file: $(ls "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/")"
      - name: Configuration tool environment...
        run: |
          sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          sudo bash $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
          java -version
      - name: Make SGSI‌‌...
        if: ${{ github.event.inputs.SGSI_TYPE }} == 'AB' || ${{ github.event.inputs.SGSI_TYPE }} == 'BOTH'
        run: |
          sudo bash $GITHUB_WORKSPACE/Tool-SGSI-build/make.sh AB << EOF
          ${{ github.event.inputs.ZIP_NAME }}
          y
          y
          ${{ github.event.inputs.OS_TYPE }}
          y
      - name: Prepare Files to Make Patch
        run: |
          zip -r Prepare_patch.zip Tool-SGSI-build/out/vendor/app/* Tool-SGSI-build/out/vendor/bin/* Tool-SGSI-build/out/vendor/etc/* Tool-SGSI-build/out/vendor/lib/* Tool-SGSI-build/out/vendor/lib64/* Tool-SGSI-build/out/vendor/overlay/*
          sudo mv Prepare_patch.zip Tool-SGSI-build/SGSI/
         
      - name: Packing...
        if: ${{ github.event.inputs.SGSI_TYPE }} == 'AB' || ${{ github.event.inputs.SGSI_TYPE }} == 'BOTH'
        run: |
          cd $GITHUB_WORKSPACE/Tool-SGSI-build
          pwd
          zip -r ${{ github.event.inputs.REPACK_NAME }} SGSI/*
          ls "${{ github.event.inputs.REPACK_NAME }}"
          echo "--------------------------------------"
          ls
          echo "--------------------------------------"
          mkdir upload
          echo "--------------------------------------"
          ls upload
          echo "--------------------------------------"
          if [ $(ls -l ${{ github.event.inputs.REPACK_NAME }} | awk '{print $5}') -gt 2147483647 ]; then tar cvzpf - ${{ github.event.inputs.REPACK_NAME }} | split -d -b 1024m - upload/${{ github.event.inputs.REPACK_NAME }}; else mv ${{ github.event.inputs.REPACK_NAME }} upload/${{ github.event.inputs.REPACK_NAME }}; fi
          echo "--------------------------------------"
          ls upload
          echo "--------------------------------------"
      - name: Upload SGSI to WeTransfer
        run: |
          curl -sL https://git.io/file-transfer | sh
          ./transfer wet Tool-SGSI-build/upload/*
